'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports['default'] = throttle;

var _validators = require('../../utils/validators');

function throttle() {
  var wait = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 300;
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  return function (target, key, descriptor) {
    var userFunc = descriptor.value;

    (0, _validators.validateFunction)(userFunc, 'throttle');

    var result = void 0;
    var timeout = void 0;
    var args = void 0;
    var previous = 0;

    return _extends({}, descriptor, {
      value: function throttler() {
        var _this = this;

        var now = Date.now();
        if (!previous && options.leading === false) {
          previous = now;
        }
        var remaining = wait - (now - previous);

        for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        args = [].concat(params);
        if (remaining <= 0 || remaining > wait) {
          if (timeout) {
            clearTimeout(timeout);
            timeout = null;
          }
          previous = now;
          result = userFunc.apply(this, args);
          if (!timeout) {
            args = null;
          }
        } else if (!timeout && options.trailing !== false) {
          timeout = setTimeout(function () {
            previous = options.leading === false ? 0 : Date.now();
            timeout = null;
            result = userFunc.apply(_this, args);
            if (!timeout) {
              args = null;
            }
          }, remaining);
        }
        return result;
      }
    });
  };
}
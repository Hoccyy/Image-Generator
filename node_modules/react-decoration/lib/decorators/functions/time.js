'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports['default'] = time;

var _validators = require('../../utils/validators');

function time(message) {
  return function (target, key, descriptor) {
    var userFunc = descriptor.value;
    (0, _validators.validateFunction)(userFunc, 'time');

    return _extends({}, descriptor, {
      value: function timer() {
        //eslint-disable-next-line
        console.time(message);

        for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        var result = userFunc.apply(this, [].concat(params));
        //eslint-disable-next-line
        console.timeEnd(message);
        return result;
      }
    });
  };
}
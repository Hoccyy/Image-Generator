'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports['default'] = log;

var _validators = require('../../utils/validators');

function log(target, key, descriptor) {
  var userFunc = descriptor.value;
  (0, _validators.validateFunction)(userFunc, 'log');

  return _extends({}, descriptor, {
    value: function logger() {
      var _console;

      for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
        params[_key] = arguments[_key];
      }

      //eslint-disable-next-line
      (_console = console).log.apply(_console, ['Calling function "' + key + '" with params: '].concat(params));
      return userFunc.apply(this, [].concat(params));
    }
  });
}
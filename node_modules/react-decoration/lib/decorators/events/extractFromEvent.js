'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports['default'] = extractFromEvent;

var _validators = require('../../utils/validators');

function extractFromEvent(property) {
  if (!property) {
    throw new Error('@extractFromEvent: invalid property specified in decorator');
  }

  return function (target, key, descriptor) {
    var userHandler = descriptor && descriptor.value;

    (0, _validators.validateFunction)(userHandler, 'extractFromEvent');

    return _extends({}, descriptor, {
      value: function processEvent(event) {
        for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          params[_key - 1] = arguments[_key];
        }

        userHandler.apply(this, [property.split('.').reduce(function (current, next) {
          return current[next];
        }, event)].concat(params));
      }
    });
  };
}